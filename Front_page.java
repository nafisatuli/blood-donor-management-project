/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Other;

import java.awt.Dimension;
import java.awt.Toolkit;
import net.proteanit.sql.DbUtils;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author HTCM
 */
public class Front_page extends javax.swing.JFrame {

    /**
     * Creates new form Front_page
     */
    public Connection connect;
    public Statement state, state2, state3, stateUp, state5, state7, state8, state11, state12, state13;
    public ResultSet res, res2, res3, res5, res7, res8, res11, res12, res13;
    public String ans, query, query2, query3, query4, query5, query6, query7, query8, query11, query12, query13;

    /**
     * Creates new form new_one
     */
    public Front_page() {
        initComponents();
        connection();
        MaleB.setSelected(true);
        MaleB2.setSelected(true);
        InsertCombo.setSelectedItem("B+");
        count.setSelectedItem("B+");
        UpdateCombo.setSelectedItem("B+");
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
    }

    public void connection() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            connect = DriverManager.getConnection("jdbc:mysql://localhost:3306/mu_blood_donors?zeroDateTimeBehavior=convertToNull", "root", "");
            state = connect.createStatement();
            //JOptionPane.showMessageDialog(null, "Connected with Donors page!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "No connection in donors page!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jToolBar1 = new javax.swing.JToolBar();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        AllAutho = new javax.swing.JCheckBox();
        includ = new javax.swing.JCheckBox();
        AuthoB = new javax.swing.JButton();
        OrderBG = new javax.swing.JCheckBox();
        ClearAuth = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        AuthTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        IDtx = new javax.swing.JTextField();
        Nametx = new javax.swing.JTextField();
        Relitx = new javax.swing.JTextField();
        LDtx = new javax.swing.JTextField();
        Pntx = new javax.swing.JTextField();
        SubmitB = new javax.swing.JButton();
        ClearAdd = new javax.swing.JButton();
        MaleB = new javax.swing.JRadioButton();
        FemaleB = new javax.swing.JRadioButton();
        InsertCombo = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        select_column = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        search = new java.awt.TextField();
        btnSearch = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        count = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        All = new javax.swing.JCheckBox();
        TxAreabtn = new javax.swing.JButton();
        UP = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        STable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        UpdateID = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        UpdateName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        UpdateReli = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        UpdateLD = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        UpdateNmbr = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        UpdateTable = new javax.swing.JTable();
        UpdateB = new javax.swing.JButton();
        ShowB = new javax.swing.JButton();
        ClearUpdate = new javax.swing.JButton();
        MaleB2 = new javax.swing.JRadioButton();
        FemaleB2 = new javax.swing.JRadioButton();
        UpdateCombo = new javax.swing.JComboBox<>();
        ComboUp2 = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        InSearchtx3 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        DeleteMain = new javax.swing.JButton();
        ShowAll = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        ComboDelete2 = new javax.swing.JComboBox<>();
        InSearchtx2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        IDA2 = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        NA2 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        GA2 = new javax.swing.JTextField();
        BGA2 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        RA2 = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        LDA2 = new javax.swing.JTextField();
        PNA2 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        DeleteTable2 = new javax.swing.JTable();
        ClearDlt1 = new javax.swing.JButton();
        Logout = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jToolBar1.setRollover(true);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setBounds(new java.awt.Rectangle(0, 0, 1050, 700));
        setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        setForeground(new java.awt.Color(153, 204, 255));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MU Blood Donors");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 580, 40));

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setForeground(new java.awt.Color(0, 51, 204));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel38.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(0, 51, 204));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Authority Information");
        jPanel6.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 40));

        AllAutho.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        AllAutho.setForeground(new java.awt.Color(0, 51, 51));
        AllAutho.setText("All information of Authority");
        AllAutho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AllAuthoMouseClicked(evt);
            }
        });
        AllAutho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllAuthoActionPerformed(evt);
            }
        });
        jPanel6.add(AllAutho, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 40, -1, -1));

        includ.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        includ.setForeground(new java.awt.Color(0, 51, 51));
        includ.setText("ID,Name,Blood group of blood donor's who are in authority ");
        includ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                includMouseClicked(evt);
            }
        });
        includ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                includActionPerformed(evt);
            }
        });
        jPanel6.add(includ, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        AuthoB.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        AuthoB.setForeground(new java.awt.Color(0, 51, 204));
        AuthoB.setText("Submit");
        AuthoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AuthoBActionPerformed(evt);
            }
        });
        jPanel6.add(AuthoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 180, -1, 30));

        OrderBG.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        OrderBG.setForeground(new java.awt.Color(0, 51, 51));
        OrderBG.setText("Name of the persons who are in authority order by blood group category");
        OrderBG.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderBGMouseClicked(evt);
            }
        });
        OrderBG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderBGActionPerformed(evt);
            }
        });
        jPanel6.add(OrderBG, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        ClearAuth.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ClearAuth.setForeground(new java.awt.Color(0, 51, 204));
        ClearAuth.setText("Clear");
        ClearAuth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearAuthActionPerformed(evt);
            }
        });
        jPanel6.add(ClearAuth, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 180, -1, 30));

        jPanel7.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 220));

        AuthTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        AuthTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        AuthTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AuthTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(AuthTable);

        jPanel7.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 990, 320));

        jTabbedPane1.addTab("Authority Info", jPanel7);

        jPanel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Add A New Blood Donor");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, -1));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 51));
        jLabel2.setText("ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 30, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setText("Name");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 70, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setText("Gender");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 90, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setText("Blood group");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 150, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setText("Religion");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 100, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setText("Last Donation");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 150, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("Phone number");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 160, -1));

        IDtx.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        IDtx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDtxActionPerformed(evt);
            }
        });
        jPanel1.add(IDtx, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 580, -1));

        Nametx.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel1.add(Nametx, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 580, -1));

        Relitx.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel1.add(Relitx, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, 580, -1));

        LDtx.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        LDtx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LDtxActionPerformed(evt);
            }
        });
        jPanel1.add(LDtx, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, 580, -1));

        Pntx.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        Pntx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PntxActionPerformed(evt);
            }
        });
        jPanel1.add(Pntx, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 440, 580, -1));

        SubmitB.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        SubmitB.setForeground(new java.awt.Color(0, 51, 204));
        SubmitB.setText("Submit");
        SubmitB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBActionPerformed(evt);
            }
        });
        jPanel1.add(SubmitB, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 500, -1, 30));

        ClearAdd.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ClearAdd.setForeground(new java.awt.Color(0, 51, 204));
        ClearAdd.setText("Clear");
        ClearAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearAddActionPerformed(evt);
            }
        });
        jPanel1.add(ClearAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 500, -1, 30));

        MaleB.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        MaleB.setText("Male");
        MaleB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MaleBMouseClicked(evt);
            }
        });
        MaleB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaleBActionPerformed(evt);
            }
        });
        jPanel1.add(MaleB, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, -1, -1));

        FemaleB.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        FemaleB.setText("Female");
        FemaleB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FemaleBMouseClicked(evt);
            }
        });
        jPanel1.add(FemaleB, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 110, -1));

        InsertCombo.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        InsertCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));
        jPanel1.add(InsertCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, -1, -1));

        jTabbedPane1.addTab("Add donor", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 51));
        jLabel11.setText("View information by");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 220, -1));

        select_column.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        select_column.setForeground(new java.awt.Color(0, 51, 51));
        select_column.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Name", "Blood_group", "Religion", "Gender" }));
        select_column.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                select_columnMouseClicked(evt);
            }
        });
        select_column.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                select_columnActionPerformed(evt);
            }
        });
        jPanel4.add(select_column, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 90, 190, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 51));
        jLabel12.setText("Search by");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 110, -1));

        search.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        jPanel4.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 430, 30));

        btnSearch.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(0, 51, 204));
        btnSearch.setText("Submit");
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSearchMouseClicked(evt);
            }
        });
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });
        jPanel4.add(btnSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 180, -1, 30));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 51, 51));
        jLabel24.setText("Check number of blood donors by category");
        jPanel4.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 150, 450, -1));

        count.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        count.setForeground(new java.awt.Color(0, 51, 51));
        count.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));
        count.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                countMouseClicked(evt);
            }
        });
        jPanel4.add(count, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 150, -1, -1));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 51, 204));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Search Blood Donors Information Here");
        jPanel4.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 0, 990, -1));

        All.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        All.setForeground(new java.awt.Color(0, 51, 51));
        All.setText("All Information");
        All.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AllMouseClicked(evt);
            }
        });
        All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllActionPerformed(evt);
            }
        });
        jPanel4.add(All, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, -1, -1));

        TxAreabtn.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        TxAreabtn.setForeground(new java.awt.Color(0, 51, 204));
        TxAreabtn.setText("Clear");
        TxAreabtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxAreabtnActionPerformed(evt);
            }
        });
        jPanel4.add(TxAreabtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 180, -1, 30));

        UP.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        UP.setForeground(new java.awt.Color(0, 51, 51));
        UP.setText("Username and password");
        UP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPMouseClicked(evt);
            }
        });
        jPanel4.add(UP, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 30, -1, -1));

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 220));

        STable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        STable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Title 7"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        STable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                STableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(STable);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 990, 320));

        jTabbedPane1.addTab("Search", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 51, 51));
        jLabel13.setText("ID");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, -1));

        UpdateID.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel3.add(UpdateID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 220, 30));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 51, 51));
        jLabel14.setText("Name");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 60, -1));

        UpdateName.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        UpdateName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateNameActionPerformed(evt);
            }
        });
        jPanel3.add(UpdateName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 220, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 51, 51));
        jLabel15.setText("Gender");
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, -1, -1));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 51, 51));
        jLabel16.setText("Blood group");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 110, -1));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 51, 51));
        jLabel17.setText("Religion");
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 80, -1));

        UpdateReli.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel3.add(UpdateReli, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 220, 30));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 51, 51));
        jLabel18.setText("Last Donation");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 130, -1));

        UpdateLD.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel3.add(UpdateLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 220, 30));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 51, 51));
        jLabel19.setText("Phone number");
        jPanel3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, 130, -1));

        UpdateNmbr.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        UpdateNmbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateNmbrActionPerformed(evt);
            }
        });
        jPanel3.add(UpdateNmbr, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 220, 30));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 51, 204));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Update A Blood Donor's Information ");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, 30));

        UpdateTable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        UpdateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gender", "Blood group", "Religion", "Last donation", "Phone number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        UpdateTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(UpdateTable);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 750, 410));

        UpdateB.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        UpdateB.setForeground(new java.awt.Color(0, 51, 204));
        UpdateB.setText("Update");
        UpdateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateBActionPerformed(evt);
            }
        });
        jPanel3.add(UpdateB, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 500, -1, -1));

        ShowB.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ShowB.setForeground(new java.awt.Color(0, 51, 204));
        ShowB.setText("Show");
        ShowB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowBActionPerformed(evt);
            }
        });
        jPanel3.add(ShowB, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 500, -1, -1));

        ClearUpdate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ClearUpdate.setForeground(new java.awt.Color(0, 51, 204));
        ClearUpdate.setText("Clear");
        ClearUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearUpdateActionPerformed(evt);
            }
        });
        jPanel3.add(ClearUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 500, -1, -1));

        MaleB2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        MaleB2.setText("Male");
        MaleB2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MaleB2MouseClicked(evt);
            }
        });
        MaleB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MaleB2ActionPerformed(evt);
            }
        });
        jPanel3.add(MaleB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, -1, 30));

        FemaleB2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        FemaleB2.setText("Female");
        FemaleB2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FemaleB2MouseClicked(evt);
            }
        });
        jPanel3.add(FemaleB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, -1, 30));

        UpdateCombo.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        UpdateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));
        jPanel3.add(UpdateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, -1, -1));

        ComboUp2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ComboUp2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Name", "Blood_group", "Gender", "Religion" }));
        jPanel3.add(ComboUp2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, -1, 30));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 51, 51));
        jLabel35.setText("Search by");
        jPanel3.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        InSearchtx3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InSearchtx3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InSearchtx3ActionPerformed(evt);
            }
        });
        InSearchtx3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InSearchtx3KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InSearchtx3KeyReleased(evt);
            }
        });
        jPanel3.add(InSearchtx3, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 440, -1));

        jTabbedPane1.addTab("Update", jPanel3);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 51, 204));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("Delete A Blood Donor's All Information");
        jPanel5.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 990, -1));

        DeleteMain.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        DeleteMain.setForeground(new java.awt.Color(0, 51, 204));
        DeleteMain.setText("Delete");
        DeleteMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteMainActionPerformed(evt);
            }
        });
        jPanel5.add(DeleteMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 500, -1, 30));

        ShowAll.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ShowAll.setForeground(new java.awt.Color(0, 51, 204));
        ShowAll.setText("Show All");
        ShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAllActionPerformed(evt);
            }
        });
        jPanel5.add(ShowAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 500, -1, 30));

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 51, 51));
        jLabel34.setText("Search by");
        jPanel5.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        ComboDelete2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ComboDelete2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID", "Name", "Blood_group", "Gender", "Religion" }));
        jPanel5.add(ComboDelete2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, 30));

        InSearchtx2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InSearchtx2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InSearchtx2ActionPerformed(evt);
            }
        });
        InSearchtx2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InSearchtx2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InSearchtx2KeyReleased(evt);
            }
        });
        jPanel5.add(InSearchtx2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 460, -1));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 51, 51));
        jLabel22.setText("ID");
        jPanel5.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        IDA2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        IDA2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDA2ActionPerformed(evt);
            }
        });
        jPanel5.add(IDA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 240, -1));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 51, 51));
        jLabel23.setText("Name");
        jPanel5.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        NA2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel5.add(NA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 240, -1));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 51, 51));
        jLabel27.setText("Gender");
        jPanel5.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        GA2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel5.add(GA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 240, -1));

        BGA2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel5.add(BGA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 240, -1));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 51, 51));
        jLabel28.setText("Blood group");
        jPanel5.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 51, 51));
        jLabel29.setText("Religion");
        jPanel5.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        RA2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel5.add(RA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 240, -1));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 51, 51));
        jLabel30.setText("Last donation");
        jPanel5.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        LDA2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel5.add(LDA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 240, -1));

        PNA2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel5.add(PNA2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 240, -1));

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 51, 51));
        jLabel21.setText("Phone number");
        jPanel5.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, -1, -1));

        DeleteTable2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DeleteTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DeleteTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteTable2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(DeleteTable2);

        jPanel5.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 730, 400));

        ClearDlt1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ClearDlt1.setForeground(new java.awt.Color(0, 51, 204));
        ClearDlt1.setText("Clear");
        ClearDlt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearDlt1ActionPerformed(evt);
            }
        });
        jPanel5.add(ClearDlt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 500, -1, 30));

        jTabbedPane1.addTab("Delete", jPanel5);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 1160, 550));

        Logout.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Logout.setForeground(new java.awt.Color(0, 51, 204));
        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });
        getContentPane().add(Logout, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 0, 110, -1));

        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jMenu1.setForeground(new java.awt.Color(0, 51, 204));
        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItem2.setForeground(new java.awt.Color(0, 51, 204));
        jMenuItem2.setText("New");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItem4.setForeground(new java.awt.Color(0, 51, 204));
        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //insert
    private void SubmitBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBActionPerformed
        // TODO add your handling code here:
        try {
            String id = "", nam = "", Gen = "", BL = "", Reli = "", LD = "", Pn = "";
            if ((IDtx.getText().equals("")) || (Nametx.getText().equals("")) || (!((MaleB.isSelected()) || (FemaleB.isSelected()))) || (Pntx.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Please!Give ID,Name,Gender,Blood Group,Phone number and other information");
            } else {
                //System.out.println(IDtx.getText()+" "+Nametx.getText());
                id = IDtx.getText();
                if (id.length() == 1) {
                    id = '0' + id;
                }
                nam = Nametx.getText();
                Gen = "";
                if (MaleB.isSelected()) {
                    Gen = "Male";
                } else if (FemaleB.isSelected()) {
                    Gen = "Female";
                }
                //String Gen = Gentx.getText();
                BL = (String) InsertCombo.getSelectedItem();
                Reli = Relitx.getText();
                LD = LDtx.getText();
                Pn = Pntx.getText();
                query = "insert into information(ID,Name,Gender,Blood_group,Religion,Last_donation,Phone_number) "
                        + "values('" + id + "','" + nam + "','" + Gen + "','" + BL + "','" + Reli + "','" + LD + "','" + Pn + "')";
                System.out.println(query);
//            state.executeQuery(query);
                state.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "Donor is now added!");
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Sorry!You are inserting duplicate ID!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_SubmitBActionPerformed

    private void UpdateNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateNameActionPerformed

    private void UpdateNmbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateNmbrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateNmbrActionPerformed
    //update
    private void UpdateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateBActionPerformed
        // TODO add your handling code here:
        try {
            String ID1 = "", nam1 = "", gen1 = "", BG1 = "", Reli1 = "", LD1 = "", nmbr1 = "";
            stateUp = connect.createStatement();
            if ((UpdateID.getText().equals("")) || (UpdateName.getText().equals("")) || (!((MaleB2.isSelected()) || (FemaleB2.isSelected()))) || (UpdateNmbr.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Please update ID,Name,Gender,Blood group,Phone number and other information correctly!");
            } else {
                ID1 = UpdateID.getText();
                nam1 = UpdateName.getText();
                gen1 = "";
                if (MaleB2.isSelected()) {
                    gen1 = "Male";
                } else if (FemaleB2.isSelected()) {
                    gen1 = "Female";
                }
                BG1 = (String) UpdateCombo.getSelectedItem();
                Reli1 = UpdateReli.getText();
                LD1 = UpdateLD.getText();
                nmbr1 = UpdateNmbr.getText();
                query4 = "Update information Set ID='" + ID1 + "',Name='" + nam1 + "',Gender='" + gen1 + "',Blood_group='" + BG1 + "',Religion='" + Reli1 + "',Last_donation='" + LD1 + "',Phone_number='" + nmbr1 + "'where ID='" + ID1 + "'";

                stateUp.executeUpdate(query4);
                JOptionPane.showMessageDialog(null, "Donor's info is now updated!");
            }
        } catch (Exception e2) {
            JOptionPane.showMessageDialog(null, "Exception in table: " + e2);
        }
    }//GEN-LAST:event_UpdateBActionPerformed
    //show
    private void ShowBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowBActionPerformed
        // TODO add your handling code here:
        try {
            state2 = connect.createStatement();
            query2 = "select * from information";
            res2 = state2.executeQuery(query2);
            UpdateTable.setModel(DbUtils.resultSetToTableModel(res2));

        } catch (SQLException e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_ShowBActionPerformed
    //set in textfield
    private void UpdateTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateTableMouseClicked
        // TODO add your handling code here:
        TableColumnModel modelecolonne = UpdateTable.getColumnModel();
        TableModel modele = UpdateTable.getModel();
        int tot = modelecolonne.getColumnCount();
        for (int i = 0; i < tot; i++) {
            int taille = 0;
            int tot2 = modele.getRowCount();
            for (int j = 0; j < tot2; j++) {
                if (modele.getValueAt(j, i) != null) {
                    int taille2 = modele.getValueAt(j, i).toString().length() * 7;
                    if (taille2 > taille) {
                        taille = taille2;
                    }
                }
                modelecolonne.getColumn(i).setPreferredWidth(taille);
            }
        }
        String s1 = "", s2 = "";
        int row = UpdateTable.getSelectedRow();
        String n = UpdateTable.getModel().getValueAt(row, 0).toString();
        query3 = "select * from information where ID='" + n + "'";
        try {
            state3 = connect.createStatement();
            res3 = state3.executeQuery(query3);
            //s1=res3.getString("Blood_group");
            //s2=res3.getString("Gender");
            //System.out.println(s1);
            while (res3.next()) {
                UpdateID.setText(res3.getString("ID"));
                UpdateName.setText(res3.getString("Name"));
                //UpdateGen.setText(res3.getString("Gender"));
                //UpdateBG.setText(res3.getString("Blood_group"));

                if (("Male").equals(res3.getString("Gender"))) {
                    MaleB2.setSelected(true);
                    FemaleB2.setSelected(false);
                } else {
                    FemaleB2.setSelected(true);
                    MaleB2.setSelected(false);
                }
                UpdateCombo.setSelectedItem(res3.getString("Blood_group"));
                UpdateReli.setText(res3.getString("Religion"));
                UpdateLD.setText(res3.getString("Last_donation"));
                UpdateNmbr.setText(res3.getString("Phone_number"));
            }
            //JOptionPane.showMessageDialog(null, "Ok!");
        } catch (Exception e1) {
            JOptionPane.showMessageDialog(null, "Exception in table: " + e1);
        }
    }//GEN-LAST:event_UpdateTableMouseClicked

    private void IDtxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDtxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDtxActionPerformed

    private void LDtxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LDtxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LDtxActionPerformed

    private void PntxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PntxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PntxActionPerformed

    private void select_columnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_select_columnActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_select_columnActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(1);
        IDtx.setText("");
        Nametx.setText("");
        MaleB.setSelected(true);
        FemaleB.setSelected(false);
        InsertCombo.setSelectedItem("B+");
        Relitx.setText("");
        LDtx.setText("");
        Pntx.setText("");
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void ClearAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearAddActionPerformed
        // TODO add your handling code here:

        IDtx.setText("");
        Nametx.setText("");
        MaleB.setSelected(true);
        FemaleB.setSelected(false);
        InsertCombo.setSelectedItem("B+");
        Relitx.setText("");
        LDtx.setText("");
        Pntx.setText("");

    }//GEN-LAST:event_ClearAddActionPerformed

    private void ClearUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearUpdateActionPerformed
        // TODO add your handling code here:
        UpdateID.setText("");
        UpdateName.setText("");
        MaleB2.setSelected(true);
        FemaleB2.setSelected(false);
        UpdateCombo.setSelectedItem("B+");
        UpdateReli.setText("");
        UpdateLD.setText("");
        UpdateNmbr.setText("");
        ComboUp2.setSelectedItem("ID");
        InSearchtx3.setText("");
        try {
//            st11 = con.createStatement();
//            query11 = "select * from authority";
//            res11 = st11.executeQuery(query11);
            UpdateTable.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception:" + e);
        }
    }//GEN-LAST:event_ClearUpdateActionPerformed
    //Delete button
    private void DeleteMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteMainActionPerformed
        // TODO add your handling code here:

        try {
            String DeleteID = IDA2.getText();
            if (DeleteID.equals("")) {
                JOptionPane.showMessageDialog(null, "Please!Select the donor whose info you want to delete!");
            } else {
                query6 = "Delete from information where ID='" + DeleteID + "'";
                System.out.println(query6);
//            state.executeQuery(query);
                state.executeUpdate(query6);
                JOptionPane.showMessageDialog(null, "Selected Donor's info is now deleted!");
            }
        } catch (SQLException e6) {
            JOptionPane.showMessageDialog(null, "Exception::: " + e6);
        }
    }//GEN-LAST:event_DeleteMainActionPerformed

    private void ShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAllActionPerformed

        try {
            state13 = connect.createStatement();
            query13 = "select * from information";
            res13 = state13.executeQuery(query13);
            DeleteTable2.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));
            DeleteTable2.setModel(DbUtils.resultSetToTableModel(res13));

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_ShowAllActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        if (UP.isSelected()) {
            String tx = "";
            query7 = "select User_name,Password from autho_pass where position='member'";
            try {
                state7 = connect.createStatement();
                res7 = state7.executeQuery(query7);
                STable.setModel(new DefaultTableModel(null, new String[]{"User_name", "Password"}));
                STable.setModel(DbUtils.resultSetToTableModel(res7));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Exception in username password:" + e);
            }
        } else {
            String str1 = (String) select_column.getSelectedItem();
//            System.out. String str1 = (String) select_column.getSelectedItem();println(str1+"\n");
            String item1 = search.getText();
//            query7 = "select * from information where " + str1 + " = '" + item1 + "'";
            int ok = 0;
            if (All.isSelected()) {
                query7 = "select * from information";
                ok = 2;
            } else if ("".equals(search.getText())) {
                query7 = "select count(*) from information group by blood_group having blood_group='" + count.getSelectedItem() + "'";
                //System.out.println(query7);
                ok = 1;
            } else {
                if ("ID".equals(str1)) {
                    if (item1.length() == 1) {
                        item1 = "0" + item1;
                    }
                    query7 = "select * from information where " + str1 + " = '" + item1 + "'";
                } else {
                    query7 = "select * from information where " + str1 + " like '%" + item1 + "%'";
                }
                ok = 3;

            }
            try {
                state7 = connect.createStatement();
                System.out.println(query7);
                res7 = state7.executeQuery(query7);
                String answer = "";
                if (ok == 1) {
                    while (res7.next()) {

                        int cont = res7.getInt(1);
                        answer += "Total " + count.getSelectedItem() + " Blood donors:" + cont + "\n ";
                        //System.out.println(answer);
                        JOptionPane.showMessageDialog(null, answer);

                    }
                } else if (ok == 2 || ok == 3) {
                    STable.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));
                    STable.setModel(DbUtils.resultSetToTableModel(res7));
//                    String sID = res7.getString("ID");
//                    String sName = res7.getString("Name");
//                    String sGen = res7.getString("Gender");
//                    String sBG = res7.getString("Blood_group");
//                    String sRe = res7.getString("Religion");
//                    String sLD = res7.getString("Last_donation");
//                    String sPn = res7.getString("Phone_number");
//                    answer += "ID:" + sID + " \n" + "Name:" + sName + " \n" + "Gender:" + sGen + " \n" + "Blood group:" + sBG
//                            + " \n" + "Religion:" + sRe + " \n" + "Last donation:" + sLD + " \n" + "Phone number:" + sPn + " \n\n\n";
////                ResultArea.append(" ID= " + sID + "\n");

                    //System.out.println(answer);
                } else {
                    JOptionPane.showMessageDialog(null, "Please!use the options for searching.");
                }
            } catch (Exception e7) {
                JOptionPane.showMessageDialog(null, "Exception:: " + e7);
            }
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_btnSearchMouseClicked

    private void TxAreabtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxAreabtnActionPerformed
        // TODO add your handling code here:
        search.setText("");
        All.setSelected(false);
        count.setSelectedItem("B+");
        select_column.setSelectedItem("ID");
        UP.setSelected(false);
        try {
//            st11 = con.createStatement();
//            query11 = "select * from authority";
//            res11 = st11.executeQuery(query11);
            STable.setModel(new DefaultTableModel(null, new String[]{"Authority_ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception:" + e);
        }
    }//GEN-LAST:event_TxAreabtnActionPerformed

    private void ClearAuthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearAuthActionPerformed
        // TODO add your handling code here:
        AuthTable.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));
        AllAutho.setSelected(false);
        includ.setSelected(false);
        OrderBG.setSelected(false);
    }//GEN-LAST:event_ClearAuthActionPerformed

    private void AllAuthoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllAuthoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AllAuthoActionPerformed

    private void MaleBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaleBActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_MaleBActionPerformed

    private void MaleB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MaleB2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MaleB2ActionPerformed

    private void AuthoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AuthoBActionPerformed
        // TODO add your handling code here:

        int flag = 0;
        String s = "";
        if (AllAutho.isSelected()) {
            query8 = "select * from authority";
            flag = 1;
        } else if (includ.isSelected()) {
            query8 = "select info.ID,info.Name,info.Blood_group,aut.Authority_ID,aut.Name,aut.Blood_group from information as info,authority as aut where info.Name=aut.Name order by aut.Authority_ID";
            flag = 3;
        } else if (OrderBG.isSelected()) {
            query8 = "select Name,Blood_group from authority order by Blood_group";
            flag = 2;
        } else {
            JOptionPane.showMessageDialog(null, "Please!Select the option which you want to see!");
        }
        try {
            state8 = connect.createStatement();
            res8 = state8.executeQuery(query8);
            if (flag == 1) {
                AuthTable.setModel(DbUtils.resultSetToTableModel(res8));
//                while (res8.next()) {
//                    String AuthID = res8.getString("ID");
//                    String AuthName = res8.getString("Name");
//                    String AuthGen = res8.getString("Gender");
//                    String AuthBG = res8.getString("Blood_group");
//                    String AuthRe = res8.getString("Religion");
//                    String AuthLD = res8.getString("Last_donation");
//                    String AuthPn = res8.getString("Phone_number");
//
//                    s += "ID:" + AuthID + " \n" + "Name:" + AuthName + " \n" + "Gender:" + AuthGen + " \n" + "Blood group:" + AuthBG + " \n"
//                            + "Religion:" + AuthRe + " \n" + "Last donation:" + AuthLD + " \n" + "Phone number:" + AuthPn + " \n\n\n";
//                }
            } else if (flag == 2) {
                AuthTable.setModel(new DefaultTableModel(null, new String[]{"Name", "Blood_donation"}));
                AuthTable.setModel(DbUtils.resultSetToTableModel(res8));
//                while (res8.next()) {
//                    String ANam = res8.getString("Name");
//                    String ABG = res8.getString("Blood_group");
//                    s += "Name: " + ANam + " \n" + "Blood group: " + ABG + " \n\n";
//                }
            } else if (flag == 3) {
                AuthTable.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Blood_group", "Authority_ID", "Name", "Blood_group"}));
                AuthTable.setModel(DbUtils.resultSetToTableModel(res8));
//                while (res8.next()) {
//                    String ID1 = res8.getString("info.ID");
//                    String Nam1 = res8.getString("info.Name");
//                    String BG1 = res8.getString("info.Blood_group");
//                    String ID2 = res8.getString("aut.ID");
//                    String Nam2 = res8.getString("aut.Name");
//                    String BG2 = res8.getString("aut.Blood_group");
//                    s += "Authority member's ID: " + ID2 + " \n" + "Authority member's name: " + Nam2 + " \n" + "Authority member's Blood group: " + BG2 + " \n\n"
//                            + "Donor's ID: " + ID1 + " \n" + "Donor's name: " + Nam1 + " \n" + "Donor's Blood group: " + BG1 + "\n\n";
//
//                }
            }

        } catch (Exception e) {
            e.printStackTrace();
            //JOptionPane.showMessageDialog(null, "Please!Select the info which want to see!");
        }
    }//GEN-LAST:event_AuthoBActionPerformed

    private void AllAuthoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AllAuthoMouseClicked
        // TODO add your handling code here:
        includ.setSelected(false);
        OrderBG.setSelected(false);
    }//GEN-LAST:event_AllAuthoMouseClicked

    private void includMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_includMouseClicked
        // TODO add your handling code here:
        AllAutho.setSelected(false);
        OrderBG.setSelected(false);
    }//GEN-LAST:event_includMouseClicked

    private void OrderBGMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderBGMouseClicked
        // TODO add your handling code here:
        includ.setSelected(false);
        AllAutho.setSelected(false);
    }//GEN-LAST:event_OrderBGMouseClicked

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
        // TODO add your handling code here:
        All.setSelected(false);
        count.setSelectedItem("A+");
        UP.setSelected(false);
    }//GEN-LAST:event_searchMouseClicked

    private void AllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AllMouseClicked
        // TODO add your handling code here:
        select_column.setSelectedItem("ID");
        search.setText("");
        count.setSelectedItem("A+");
        UP.setSelected(false);
    }//GEN-LAST:event_AllMouseClicked

    private void MaleBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaleBMouseClicked
        // TODO add your handling code here:
        FemaleB.setSelected(false);
    }//GEN-LAST:event_MaleBMouseClicked

    private void FemaleBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FemaleBMouseClicked
        // TODO add your handling code here:
        MaleB.setSelected(false);
    }//GEN-LAST:event_FemaleBMouseClicked

    private void MaleB2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MaleB2MouseClicked
        // TODO add your handling code here:
        FemaleB2.setSelected(false);
    }//GEN-LAST:event_MaleB2MouseClicked

    private void FemaleB2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FemaleB2MouseClicked
        // TODO add your handling code here:
        MaleB2.setSelected(false);
    }//GEN-LAST:event_FemaleB2MouseClicked

    private void AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AllActionPerformed

    private void countMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_countMouseClicked
        // TODO add your handling code here:
        All.setSelected(false);
        select_column.setSelectedItem("ID");
        search.setText("");
        UP.setSelected(false);
    }//GEN-LAST:event_countMouseClicked

    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Logout!");
        new User().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_LogoutActionPerformed

    private void select_columnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_select_columnMouseClicked
        // TODO add your handling code here:
        All.setSelected(false);
        count.setSelectedItem("A+");
        UP.setSelected(false);
    }//GEN-LAST:event_select_columnMouseClicked

    private void UPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPMouseClicked
        // TODO add your handling code here:
        All.setSelected(false);
        select_column.setSelectedItem("ID");
        search.setText("");
        count.setSelectedItem("A+");
    }//GEN-LAST:event_UPMouseClicked

    private void includActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_includActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_includActionPerformed

    private void InSearchtx2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InSearchtx2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InSearchtx2ActionPerformed

    private void InSearchtx2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InSearchtx2KeyPressed
        // TODO add your handling code here:
        String s1 = (String) ComboDelete2.getSelectedItem();
        String s2 = InSearchtx2.getText();
        if (s1.equals("ID")) {
            if (s2.length() == 1) {
                s2 = "0" + s2;
            }
        }
        try {
            state11 = connect.createStatement();
            if (InSearchtx2.getText().equals("")) {
                query11 = "select * from information";
            } else if (ComboDelete2.getSelectedItem().equals("ID")) {
                query11 = "select * from information where " + s1 + " = '" + s2 + "'";
            } else {
                query11 = "select * from information where " + s1 + " like '%" + s2 + "%'";

            }
            res11 = state11.executeQuery(query11);
            DeleteTable2.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_InSearchtx2KeyPressed

    private void IDA2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDA2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDA2ActionPerformed

    private void DeleteTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteTable2MouseClicked
        // TODO add your handling code here:
        TableColumnModel modelecolonne = DeleteTable2.getColumnModel();
        TableModel modele = DeleteTable2.getModel();
        int tot = modelecolonne.getColumnCount();
        for (int i = 0; i < tot; i++) {
            int taille = 0;
            int tot2 = modele.getRowCount();
            for (int j = 0; j < tot2; j++) {
                if (modele.getValueAt(j, i) != null) {
                    int taille2 = modele.getValueAt(j, i).toString().length() * 7;
                    if (taille2 > taille) {
                        taille = taille2;
                    }
                }
                modelecolonne.getColumn(i).setPreferredWidth(taille);
            }
        }
        String s1 = "", s2 = "";
        int row = DeleteTable2.getSelectedRow();
        String n = DeleteTable2.getModel().getValueAt(row, 0).toString();
        query12 = "select * from information where ID='" + n + "'";
        try {
            state12 = connect.createStatement();
            res12 = state12.executeQuery(query12);
            //s1=res3.getString("Blood_group");
            //s2=res3.getString("Gender");
            //System.out.println(s1);
            while (res12.next()) {
                IDA2.setText(res12.getString("ID"));
                NA2.setText(res12.getString("Name"));
                GA2.setText(res12.getString("Gender"));
                BGA2.setText(res12.getString("Blood_group"));
                RA2.setText(res12.getString("Religion"));
                LDA2.setText(res12.getString("Last_donation"));
                PNA2.setText(res12.getString("Phone_number"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception " + e);
        }
    }//GEN-LAST:event_DeleteTable2MouseClicked

    private void OrderBGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderBGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OrderBGActionPerformed

    private void AuthTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AuthTableMouseClicked
        // TODO add your handling code here:
        TableColumnModel modelecolonne = AuthTable.getColumnModel();
        TableModel modele = AuthTable.getModel();
        int tot = modelecolonne.getColumnCount();
        for (int i = 0; i < tot; i++) {
            int taille = 0;
            int tot2 = modele.getRowCount();
            for (int j = 0; j < tot2; j++) {
                if (modele.getValueAt(j, i) != null) {
                    int taille2 = modele.getValueAt(j, i).toString().length() * 7;
                    if (taille2 > taille) {
                        taille = taille2;
                    }
                }
                modelecolonne.getColumn(i).setPreferredWidth(taille);
            }
        }
    }//GEN-LAST:event_AuthTableMouseClicked

    private void ClearDlt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearDlt1ActionPerformed
        // TODO add your handling code here:
        IDA2.setText("");
        NA2.setText("");
        GA2.setText("");
        BGA2.setText("");
        RA2.setText("");
        LDA2.setText("");
        PNA2.setText("");
        InSearchtx2.setText("");
        ComboDelete2.setSelectedItem("ID");
        try {
//            st11 = con.createStatement();
//            query11 = "select * from authority";
//            res11 = st11.executeQuery(query11);
            DeleteTable2.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception:" + e);
        }
    }//GEN-LAST:event_ClearDlt1ActionPerformed

    private void STableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_STableMouseClicked
        // TODO add your handling code here:
        TableColumnModel modelecolonne = STable.getColumnModel();
        TableModel modele = STable.getModel();
        int tot = modelecolonne.getColumnCount();
        for (int i = 0; i < tot; i++) {
            int taille = 0;
            int tot2 = modele.getRowCount();
            for (int j = 0; j < tot2; j++) {
                if (modele.getValueAt(j, i) != null) {
                    int taille2 = modele.getValueAt(j, i).toString().length() * 7;
                    if (taille2 > taille) {
                        taille = taille2;
                    }
                }
                modelecolonne.getColumn(i).setPreferredWidth(taille);
            }
        }
    }//GEN-LAST:event_STableMouseClicked

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
        // TODO add your handling code here:

        try {
            String str1 = (String) select_column.getSelectedItem();
//            System.out. String str1 = (String) select_column.getSelectedItem();println(str1+"\n");
            String item1 = search.getText();
//            query7 = "select * from information where " + str1 + " = '" + item1 + "'";
            int ok = 0;
            if ("ID".equals(str1)) {
                if (item1.length() == 1) {
                    item1 = "0" + item1;
                }
                query7 = "select * from information where " + str1 + " = '" + item1 + "'";
            } else {
                query7 = "select * from information where " + str1 + " like '%" + item1 + "%'";
            }
            state7 = connect.createStatement();
            System.out.println(query7);
            res7 = state7.executeQuery(query7);
            String answer = "";
            STable.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));
            STable.setModel(DbUtils.resultSetToTableModel(res7));
//                    String sID = res7.getString("ID");
//                    String sName = res7.getString("Name");
//                    String sGen = res7.getString("Gender");
//                    String sBG = res7.getString("Blood_group");
//                    String sRe = res7.getString("Religion");
//                    String sLD = res7.getString("Last_donation");
//                    String sPn = res7.getString("Phone_number");
//                    answer += "ID:" + sID + " \n" + "Name:" + sName + " \n" + "Gender:" + sGen + " \n" + "Blood group:" + sBG
//                            + " \n" + "Religion:" + sRe + " \n" + "Last donation:" + sLD + " \n" + "Phone number:" + sPn + " \n\n\n";
////                ResultArea.append(" ID= " + sID + "\n");

            //System.out.println(answer);
        } catch (Exception e7) {
            JOptionPane.showMessageDialog(null, "Exception:: " + e7);
        }
    }//GEN-LAST:event_searchKeyPressed

    private void InSearchtx3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InSearchtx3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InSearchtx3ActionPerformed

    private void InSearchtx3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InSearchtx3KeyPressed
        // TODO add your handling code here:
        String s1 = (String) ComboUp2.getSelectedItem();
        String s2 = InSearchtx3.getText();
        if (s1.equals("ID")) {
            if (s2.length() == 1) {
                s2 = "0" + s2;
            }
        }
        try {
            state11 = connect.createStatement();
            if (InSearchtx3.getText().equals("")) {
                query11 = "select * from information";
            } else if (ComboUp2.getSelectedItem().equals("ID")) {
                query11 = "select * from information where " + s1 + " = '" + s2 + "'";
            } else {
                query11 = "select * from information where " + s1 + " like '%" + s2 + "%'";

            }
            res11 = state11.executeQuery(query11);
            UpdateTable.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_InSearchtx3KeyPressed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:

        try {
            String str1 = (String) select_column.getSelectedItem();
//            System.out. String str1 = (String) select_column.getSelectedItem();println(str1+"\n");
            String item1 = search.getText();
//            query7 = "select * from information where " + str1 + " = '" + item1 + "'";
            int ok = 0;
            if ("ID".equals(str1)) {
                if (item1.length() == 1) {
                    item1 = "0" + item1;
                }
                query7 = "select * from information where " + str1 + " = '" + item1 + "'";
            } else {
                query7 = "select * from information where " + str1 + " like '%" + item1 + "%'";
            }
            state7 = connect.createStatement();
            System.out.println(query7);
            res7 = state7.executeQuery(query7);
            String answer = "";
            STable.setModel(new DefaultTableModel(null, new String[]{"ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));
            STable.setModel(DbUtils.resultSetToTableModel(res7));
//                    String sID = res7.getString("ID");
//                    String sName = res7.getString("Name");
//                    String sGen = res7.getString("Gender");
//                    String sBG = res7.getString("Blood_group");
//                    String sRe = res7.getString("Religion");
//                    String sLD = res7.getString("Last_donation");
//                    String sPn = res7.getString("Phone_number");
//                    answer += "ID:" + sID + " \n" + "Name:" + sName + " \n" + "Gender:" + sGen + " \n" + "Blood group:" + sBG
//                            + " \n" + "Religion:" + sRe + " \n" + "Last donation:" + sLD + " \n" + "Phone number:" + sPn + " \n\n\n";
////                ResultArea.append(" ID= " + sID + "\n");

            //System.out.println(answer);
        } catch (Exception e7) {
            JOptionPane.showMessageDialog(null, "Exception:: " + e7);
        }
    }//GEN-LAST:event_searchKeyReleased

    private void InSearchtx3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InSearchtx3KeyReleased
        // TODO add your handling code here:
        String s1 = (String) ComboUp2.getSelectedItem();
        String s2 = InSearchtx3.getText();
        if (s1.equals("ID")) {
            if (s2.length() == 1) {
                s2 = "0" + s2;
            }
        }
        try {
            state11 = connect.createStatement();
            if (InSearchtx3.getText().equals("")) {
                query11 = "select * from information";
            } else if (ComboUp2.getSelectedItem().equals("ID")) {
                query11 = "select * from information where " + s1 + " = '" + s2 + "'";
            } else {
                query11 = "select * from information where " + s1 + " like '%" + s2 + "%'";

            }
            res11 = state11.executeQuery(query11);
            UpdateTable.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_InSearchtx3KeyReleased

    private void InSearchtx2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InSearchtx2KeyReleased
        // TODO add your handling code here:
        String s1 = (String) ComboDelete2.getSelectedItem();
        String s2 = InSearchtx2.getText();
        if (s1.equals("ID")) {
            if (s2.length() == 1) {
                s2 = "0" + s2;
            }
        }
        try {
            state11 = connect.createStatement();
            if (InSearchtx2.getText().equals("")) {
                query11 = "select * from information";
            } else if (ComboDelete2.getSelectedItem().equals("ID")) {
                query11 = "select * from information where " + s1 + " = '" + s2 + "'";
            } else {
                query11 = "select * from information where " + s1 + " like '%" + s2 + "%'";

            }
            res11 = state11.executeQuery(query11);
            DeleteTable2.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_InSearchtx2KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Front_page.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Front_page.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Front_page.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Front_page.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Front_page().setVisible(true);
            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox All;
    private javax.swing.JCheckBox AllAutho;
    private javax.swing.JTable AuthTable;
    private javax.swing.JButton AuthoB;
    private javax.swing.JTextField BGA2;
    private javax.swing.JButton ClearAdd;
    private javax.swing.JButton ClearAuth;
    private javax.swing.JButton ClearDlt1;
    private javax.swing.JButton ClearUpdate;
    private javax.swing.JComboBox<String> ComboDelete2;
    private javax.swing.JComboBox<String> ComboUp2;
    private javax.swing.JButton DeleteMain;
    private javax.swing.JTable DeleteTable2;
    private javax.swing.JRadioButton FemaleB;
    private javax.swing.JRadioButton FemaleB2;
    private javax.swing.JTextField GA2;
    private javax.swing.JTextField IDA2;
    private javax.swing.JTextField IDtx;
    private javax.swing.JTextField InSearchtx2;
    private javax.swing.JTextField InSearchtx3;
    private javax.swing.JComboBox<String> InsertCombo;
    private javax.swing.JTextField LDA2;
    private javax.swing.JTextField LDtx;
    private javax.swing.JButton Logout;
    private javax.swing.JRadioButton MaleB;
    private javax.swing.JRadioButton MaleB2;
    private javax.swing.JTextField NA2;
    private javax.swing.JTextField Nametx;
    private javax.swing.JCheckBox OrderBG;
    private javax.swing.JTextField PNA2;
    private javax.swing.JTextField Pntx;
    private javax.swing.JTextField RA2;
    private javax.swing.JTextField Relitx;
    private javax.swing.JTable STable;
    private javax.swing.JButton ShowAll;
    private javax.swing.JButton ShowB;
    public javax.swing.JButton SubmitB;
    private javax.swing.JButton TxAreabtn;
    private javax.swing.JCheckBox UP;
    public javax.swing.JButton UpdateB;
    private javax.swing.JComboBox<String> UpdateCombo;
    private javax.swing.JTextField UpdateID;
    private javax.swing.JTextField UpdateLD;
    private javax.swing.JTextField UpdateName;
    private javax.swing.JTextField UpdateNmbr;
    private javax.swing.JTextField UpdateReli;
    private javax.swing.JTable UpdateTable;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> count;
    private javax.swing.JCheckBox includ;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private java.awt.TextField search;
    private javax.swing.JComboBox<String> select_column;
    // End of variables declaration//GEN-END:variables

}
