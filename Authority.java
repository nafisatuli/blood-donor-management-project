/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Other;

import java.awt.Dimension;
import java.awt.Toolkit;
import net.proteanit.sql.DbUtils;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

public class Authority extends javax.swing.JFrame {

    /**
     * Creates new form Log
     */
    public Connection con;
    public Statement st1, st2, st3, stUp, st5, st6, st10, st11, st12;
    public ResultSet res1, res2, res5, res6, res10, res11, res12;
    public String ans1, query, query2, query3, query4, query5, query6, query10, query11, query12;

    public Authority() {
        initComponents();
        connection();
        Inmale.setSelected(true);
        InMaleB2.setSelected(true);
        Inbgcom.setSelectedItem("B+");
        InUpdateCombo.setSelectedItem("B+");
        ps1.setSelectedItem("Member");
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();
        setLocation(size.width / 2 - getWidth() / 2, size.height / 2 - getHeight() / 2);
    }

    public void connection() {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3306/mu_blood_donors?zeroDateTimeBehavior=convertToNull", "root", "");
            st1 = con.createStatement();
            // JOptionPane.showMessageDialog(null, "Connected with Authority page!");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "No connection in Authority page!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Inau = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Innam = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Inmale = new javax.swing.JRadioButton();
        Infemale = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        Inbgcom = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        Inre = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Inld = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Inpn = new javax.swing.JTextField();
        Incl = new javax.swing.JButton();
        Insub = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        InSearchtx = new javax.swing.JTextField();
        ShowAll = new javax.swing.JButton();
        InDeleteMain = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        DeleteTable = new javax.swing.JTable();
        ComboDelete = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        PNA = new javax.swing.JTextField();
        IDA = new javax.swing.JTextField();
        NA = new javax.swing.JTextField();
        GA = new javax.swing.JTextField();
        BGA = new javax.swing.JTextField();
        RA = new javax.swing.JTextField();
        LDA = new javax.swing.JTextField();
        InClearDlt1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        InUpdateID = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        InUpdateName = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        InMaleB2 = new javax.swing.JRadioButton();
        InFemaleB2 = new javax.swing.JRadioButton();
        jLabel16 = new javax.swing.JLabel();
        InUpdateCombo = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        InUpdateReli = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        InUpdateLD = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        InUpdateNmbr = new javax.swing.JTextField();
        InShowB = new javax.swing.JButton();
        InUpdateB = new javax.swing.JButton();
        InClearUpdate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        InUpdateTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        ComboUp = new javax.swing.JComboBox<>();
        InSearchtx1 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        AllInfo = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        UP = new javax.swing.JCheckBox();
        MB = new javax.swing.JCheckBox();
        SumbitBtn = new javax.swing.JButton();
        ClearBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        TableSearch = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        PassTable = new javax.swing.JTable();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        UN = new javax.swing.JTextField();
        Pass = new javax.swing.JTextField();
        ShowB3 = new javax.swing.JButton();
        In1 = new javax.swing.JButton();
        Up1 = new javax.swing.JButton();
        DeleteB1 = new javax.swing.JButton();
        Clr1 = new javax.swing.JButton();
        CCombo = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        CTx = new javax.swing.JTextField();
        ps1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        Back_log = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setForeground(new java.awt.Color(0, 51, 204));
        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 51));
        jLabel2.setText("Authority ID");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 150, -1));

        Inau.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        Inau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InauActionPerformed(evt);
            }
        });
        jPanel2.add(Inau, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 50, 640, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 51, 51));
        jLabel4.setText("Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 110, 70, -1));

        Innam.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel2.add(Innam, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 110, 640, -1));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setText("Gender");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 170, 90, -1));

        Inmale.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Inmale.setText("Male");
        Inmale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InmaleMouseClicked(evt);
            }
        });
        Inmale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InmaleActionPerformed(evt);
            }
        });
        jPanel2.add(Inmale, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 170, -1, -1));

        Infemale.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Infemale.setText("Female");
        Infemale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InfemaleMouseClicked(evt);
            }
        });
        jPanel2.add(Infemale, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 110, -1));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 51));
        jLabel6.setText("Blood group");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 230, 150, -1));

        Inbgcom.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Inbgcom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));
        jPanel2.add(Inbgcom, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 230, -1, -1));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 51, 51));
        jLabel7.setText("Religion");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 300, 100, -1));

        Inre.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel2.add(Inre, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, 640, -1));

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 51, 51));
        jLabel8.setText("Last Donation");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 370, 150, -1));

        Inld.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        Inld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InldActionPerformed(evt);
            }
        });
        jPanel2.add(Inld, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, 640, -1));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 51));
        jLabel9.setText("Phone number");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 160, -1));

        Inpn.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        Inpn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InpnActionPerformed(evt);
            }
        });
        jPanel2.add(Inpn, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 440, 640, -1));

        Incl.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Incl.setForeground(new java.awt.Color(0, 51, 204));
        Incl.setText("Clear");
        Incl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InclActionPerformed(evt);
            }
        });
        jPanel2.add(Incl, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 520, -1, 30));

        Insub.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        Insub.setForeground(new java.awt.Color(0, 51, 204));
        Insub.setText("Submit");
        Insub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsubActionPerformed(evt);
            }
        });
        jPanel2.add(Insub, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 520, -1, 30));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Add a member in authority");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 40));

        jTabbedPane1.addTab("Insert", jPanel2);

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel34.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(0, 51, 51));
        jLabel34.setText("Search by");
        jPanel3.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, -1, -1));

        InSearchtx.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InSearchtx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InSearchtxActionPerformed(evt);
            }
        });
        InSearchtx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InSearchtxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InSearchtxKeyReleased(evt);
            }
        });
        jPanel3.add(InSearchtx, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 40, 460, -1));

        ShowAll.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ShowAll.setForeground(new java.awt.Color(0, 51, 204));
        ShowAll.setText("Show All");
        ShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowAllActionPerformed(evt);
            }
        });
        jPanel3.add(ShowAll, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 520, -1, 30));

        InDeleteMain.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        InDeleteMain.setForeground(new java.awt.Color(0, 51, 204));
        InDeleteMain.setText("Delete");
        InDeleteMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InDeleteMainActionPerformed(evt);
            }
        });
        jPanel3.add(InDeleteMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 520, -1, 30));

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 51, 204));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Delete a member's all information from authority");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 30));

        DeleteTable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DeleteTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Authority_ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        DeleteTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DeleteTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(DeleteTable);

        jPanel3.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, 740, 390));

        ComboDelete.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ComboDelete.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Authority_ID", "Name", "Blood_group", "Gender", "Religion" }));
        jPanel3.add(ComboDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, 30));

        jLabel20.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 51, 51));
        jLabel20.setText("Phone number");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, -1, -1));

        jLabel22.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 51, 51));
        jLabel22.setText("Authority_ID");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel23.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(0, 51, 51));
        jLabel23.setText("Name");
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jLabel24.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(0, 51, 51));
        jLabel24.setText("Gender");
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        jLabel25.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(0, 51, 51));
        jLabel25.setText("Blood group");
        jPanel3.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        jLabel26.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(0, 51, 51));
        jLabel26.setText("Religion");
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, -1, -1));

        jLabel27.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(0, 51, 51));
        jLabel27.setText("Last donation");
        jPanel3.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, -1, -1));

        PNA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(PNA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 240, -1));

        IDA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        IDA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IDAActionPerformed(evt);
            }
        });
        jPanel3.add(IDA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 240, -1));

        NA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 240, -1));

        GA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(GA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 240, -1));

        BGA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(BGA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 240, -1));

        RA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(RA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 240, -1));

        LDA.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(LDA, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 240, -1));

        InClearDlt1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        InClearDlt1.setForeground(new java.awt.Color(0, 51, 204));
        InClearDlt1.setText("Clear");
        InClearDlt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InClearDlt1ActionPerformed(evt);
            }
        });
        jPanel3.add(InClearDlt1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 520, -1, 30));

        jTabbedPane1.addTab("Delete", jPanel3);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 51, 51));
        jLabel13.setText("Authority ID");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 110, -1));

        InUpdateID.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel4.add(InUpdateID, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 220, 30));

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 51, 51));
        jLabel14.setText("Name");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 60, -1));

        InUpdateName.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        InUpdateName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InUpdateNameActionPerformed(evt);
            }
        });
        jPanel4.add(InUpdateName, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 220, 30));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 51, 51));
        jLabel15.setText("Gender");
        jPanel4.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        InMaleB2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        InMaleB2.setText("Male");
        InMaleB2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InMaleB2MouseClicked(evt);
            }
        });
        InMaleB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InMaleB2ActionPerformed(evt);
            }
        });
        jPanel4.add(InMaleB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, 30));

        InFemaleB2.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        InFemaleB2.setText("Female");
        InFemaleB2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InFemaleB2MouseClicked(evt);
            }
        });
        jPanel4.add(InFemaleB2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, -1, 30));

        jLabel16.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 51, 51));
        jLabel16.setText("Blood group");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 110, -1));

        InUpdateCombo.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        InUpdateCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-" }));
        jPanel4.add(InUpdateCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        jLabel17.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 51, 51));
        jLabel17.setText("Religion");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 80, -1));

        InUpdateReli.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel4.add(InUpdateReli, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 220, 30));

        jLabel18.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 51, 51));
        jLabel18.setText("Last Donation");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 410, 130, -1));

        InUpdateLD.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jPanel4.add(InUpdateLD, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 220, 30));

        jLabel19.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 51, 51));
        jLabel19.setText("Phone number");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 480, 130, -1));

        InUpdateNmbr.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        InUpdateNmbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InUpdateNmbrActionPerformed(evt);
            }
        });
        jPanel4.add(InUpdateNmbr, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 510, 220, 30));

        InShowB.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InShowB.setForeground(new java.awt.Color(0, 51, 204));
        InShowB.setText("Show");
        InShowB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InShowBActionPerformed(evt);
            }
        });
        jPanel4.add(InShowB, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 520, -1, -1));

        InUpdateB.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InUpdateB.setForeground(new java.awt.Color(0, 51, 204));
        InUpdateB.setText("Update");
        InUpdateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InUpdateBActionPerformed(evt);
            }
        });
        jPanel4.add(InUpdateB, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 520, -1, -1));

        InClearUpdate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InClearUpdate.setForeground(new java.awt.Color(0, 51, 204));
        InClearUpdate.setText("Clear");
        InClearUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InClearUpdateActionPerformed(evt);
            }
        });
        jPanel4.add(InClearUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 520, -1, -1));

        InUpdateTable.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InUpdateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Authority_ID", "Name", "Gender", "Blood group", "Religion", "Last donation", "Phone number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        InUpdateTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InUpdateTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(InUpdateTable);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, 760, 420));

        jLabel11.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 204));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Update a member's information of authority");
        jPanel4.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 30));

        jLabel35.setFont(new java.awt.Font("Times New Roman", 1, 22)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 51, 51));
        jLabel35.setText("Search by");
        jPanel4.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));

        ComboUp.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        ComboUp.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Authority_ID", "Name", "Blood_group", "Gender", "Religion" }));
        jPanel4.add(ComboUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 40, -1, 30));

        InSearchtx1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        InSearchtx1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InSearchtx1ActionPerformed(evt);
            }
        });
        InSearchtx1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                InSearchtx1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                InSearchtx1KeyReleased(evt);
            }
        });
        jPanel4.add(InSearchtx1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, 460, -1));

        jTabbedPane1.addTab("Update", jPanel4);

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AllInfo.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        AllInfo.setForeground(new java.awt.Color(0, 51, 51));
        AllInfo.setText("All Information");
        AllInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AllInfoMouseClicked(evt);
            }
        });
        AllInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AllInfoActionPerformed(evt);
            }
        });
        jPanel5.add(AllInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, -1, -1));

        jLabel12.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 51, 204));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Search authority information");
        jPanel5.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1000, 30));

        UP.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        UP.setForeground(new java.awt.Color(0, 51, 51));
        UP.setText("Check Username and Password");
        UP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UPMouseClicked(evt);
            }
        });
        jPanel5.add(UP, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, -1, -1));

        MB.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        MB.setForeground(new java.awt.Color(0, 51, 51));
        MB.setText("Members name with blood group");
        MB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MBMouseClicked(evt);
            }
        });
        MB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MBActionPerformed(evt);
            }
        });
        jPanel5.add(MB, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, -1, -1));

        SumbitBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        SumbitBtn.setForeground(new java.awt.Color(0, 51, 204));
        SumbitBtn.setText("Submit");
        SumbitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumbitBtnActionPerformed(evt);
            }
        });
        jPanel5.add(SumbitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 500, -1, -1));

        ClearBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ClearBtn.setForeground(new java.awt.Color(0, 51, 204));
        ClearBtn.setText("Clear");
        ClearBtn.setToolTipText("");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });
        jPanel5.add(ClearBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 500, -1, -1));

        TableSearch.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TableSearch.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Authority_ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        TableSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableSearchMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TableSearch);

        jPanel5.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 690, 350));

        jTabbedPane1.addTab("Search", jPanel5);

        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 51, 204));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Check & Change Access Info ");
        jPanel6.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, 1000, 30));

        PassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "User_name", "Password", "Position"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        PassTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PassTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(PassTable);

        jPanel6.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 620, 360));

        jLabel28.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 51, 51));
        jLabel28.setText("Position");
        jPanel6.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, -1, -1));

        jLabel29.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(0, 51, 51));
        jLabel29.setText("Username");
        jPanel6.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, -1, -1));

        jLabel30.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(0, 51, 51));
        jLabel30.setText("Password");
        jPanel6.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, -1, -1));

        UN.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel6.add(UN, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 160, 260, 40));

        Pass.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel6.add(Pass, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, 260, 40));

        ShowB3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ShowB3.setForeground(new java.awt.Color(0, 51, 204));
        ShowB3.setText("Show");
        ShowB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShowB3ActionPerformed(evt);
            }
        });
        jPanel6.add(ShowB3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, -1, -1));

        In1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        In1.setForeground(new java.awt.Color(0, 51, 204));
        In1.setText("Add");
        In1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                In1ActionPerformed(evt);
            }
        });
        jPanel6.add(In1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 470, -1, -1));

        Up1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Up1.setForeground(new java.awt.Color(0, 51, 204));
        Up1.setText("Update");
        Up1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Up1ActionPerformed(evt);
            }
        });
        jPanel6.add(Up1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 470, -1, -1));

        DeleteB1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        DeleteB1.setForeground(new java.awt.Color(0, 51, 204));
        DeleteB1.setText("Delete");
        DeleteB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteB1ActionPerformed(evt);
            }
        });
        jPanel6.add(DeleteB1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 470, -1, -1));

        Clr1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Clr1.setForeground(new java.awt.Color(0, 51, 204));
        Clr1.setText("Clear");
        Clr1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Clr1ActionPerformed(evt);
            }
        });
        jPanel6.add(Clr1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, -1));

        CCombo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "User_name", "Password", "Position" }));
        jPanel6.add(CCombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 80, -1, -1));

        jLabel31.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 51, 51));
        jLabel31.setText("Search by");
        jPanel6.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, -1, -1));

        CTx.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        CTx.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CTxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CTxKeyReleased(evt);
            }
        });
        jPanel6.add(CTx, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 280, 30));

        ps1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ps1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Main", "Member" }));
        jPanel6.add(ps1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 260, -1, -1));

        jTabbedPane1.addTab("Access", jPanel6);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 570));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Authority of MU Blood Donors");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 0, 590, 40));

        Back_log.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        Back_log.setForeground(new java.awt.Color(0, 51, 204));
        Back_log.setText("Logout");
        Back_log.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_logActionPerformed(evt);
            }
        });
        jPanel1.add(Back_log, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1110, -1));

        jMenu1.setForeground(new java.awt.Color(0, 51, 204));
        jMenu1.setText("File");
        jMenu1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jMenuItem2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItem2.setForeground(new java.awt.Color(0, 51, 204));
        jMenuItem2.setText("New");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jMenuItem3.setForeground(new java.awt.Color(0, 51, 204));
        jMenuItem3.setText("Exit");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Back_logActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_logActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Logout!");
        new User().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_Back_logActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        jTabbedPane1.setSelectedIndex(0);
        Inau.setText("");
        Innam.setText("");
        Inmale.setSelected(true);
        Infemale.setSelected(false);
        Inbgcom.setSelectedItem("B+");
        Inre.setText("");
        Inld.setText("");
        Inpn.setText("");

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void TableSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableSearchMouseClicked
        // TODO add your handling code here:
        TableColumnModel modelecolonne = TableSearch.getColumnModel();
        TableModel modele = TableSearch.getModel();
        int tot = modelecolonne.getColumnCount();
        for (int i = 0; i < tot; i++) {
            int taille = 0;
            int tot2 = modele.getRowCount();
            for (int j = 0; j < tot2; j++) {
                if (modele.getValueAt(j, i) != null) {
                    int taille2 = modele.getValueAt(j, i).toString().length() * 7;
                    if (taille2 > taille) {
                        taille = taille2;
                    }
                }
                modelecolonne.getColumn(i).setPreferredWidth(taille);
            }
        }
    }//GEN-LAST:event_TableSearchMouseClicked

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        // TODO add your handling code here:
        //ResArea.setText("");
        try {
            //            st11 = con.createStatement();
            //            query11 = "select * from authority";
            //            res11 = st11.executeQuery(query11);
            TableSearch.setModel(new DefaultTableModel(null, new String[]{"Authority_ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception:" + e);
        }
        AllInfo.setSelected(false);
        MB.setSelected(false);
        UP.setSelected(false);
    }//GEN-LAST:event_ClearBtnActionPerformed

    private void SumbitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumbitBtnActionPerformed
        // TODO add your handling code here:
        int x = 0;
        String ans = "";
        if (AllInfo.isSelected()) {
            query10 = "select * from authority";
            x = 1;
        } else if (UP.isSelected()) {
            query10 = "select * from autho_pass";
            x = 2;
        } else if (MB.isSelected()) {
            query10 = "select Name,Blood_group from authority";
            x = 3;
        } else {
            JOptionPane.showMessageDialog(null, "Please!Select the option which you want to see");
        }
        try {
            st10 = con.createStatement();
            res10 = st10.executeQuery(query10);
            if (x == 1) {
                TableSearch.setModel(DbUtils.resultSetToTableModel(res10));
                //                while (res10.next()) {
                //                    String Id = res10.getString("ID");
                //                    String Name = res10.getString("Name");
                //                    String Gen = res10.getString("Gender");
                //                    String BG = res10.getString("Blood_group");
                //                    String Re = res10.getString("Religion");
                //                    String LD = res10.getString("Last_donation");
                //                    String Pn = res10.getString("Phone_number");
                //                    ans += "ID:" + Id + " \n" + "Name:" + Name + " \n" + "Gender:" + Gen + " \n" + "Blood group:" + BG + " \n"
                //                            + "Religion:" + Re + " \n" + "Last donation:" + LD + " \n" + "Phone number:" + Pn + " \n\n\n";
                //}
            } else if (x == 2) {
                TableSearch.setModel(new DefaultTableModel(null, new String[]{"User_name", "Password"}));
                TableSearch.setModel(DbUtils.resultSetToTableModel(res10));
                //                while (res10.next()) {
                //                    String Uname = res10.getString("User_name");
                //                    String Pass = res10.getString("Password");
                //                    ans += "User name:" + Uname + " \n" + "Password:" + Pass + "\n\n";
                //                }
            } else if (x == 3) {
                TableSearch.setModel(new DefaultTableModel(null, new String[]{"Name", "Blood_group"}));
                TableSearch.setModel(DbUtils.resultSetToTableModel(res10));
                //                while (res10.next()) {
                //                    String nam = res10.getString("Name");
                //                    String bg = res10.getString("Blood_group");
                //                    ans += "Name:" + nam + "\n" + "Blood group:" + bg + "\n\n";
                //                }
            }
        } catch (Exception e) {
            //JOptionPane.showMessageDialog(null, "Please!Select the info which you want to see");
            e.printStackTrace();
        }
    }//GEN-LAST:event_SumbitBtnActionPerformed

    private void MBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MBActionPerformed

    private void MBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MBMouseClicked
        // TODO add your handling code here:
        AllInfo.setSelected(false);
        UP.setSelected(false);
    }//GEN-LAST:event_MBMouseClicked

    private void UPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UPMouseClicked
        // TODO add your handling code here:
        AllInfo.setSelected(false);
        MB.setSelected(false);
    }//GEN-LAST:event_UPMouseClicked

    private void AllInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AllInfoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AllInfoActionPerformed

    private void AllInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AllInfoMouseClicked
        // TODO add your handling code here:
        UP.setSelected(false);
        MB.setSelected(false);
    }//GEN-LAST:event_AllInfoMouseClicked

    private void InSearchtx1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InSearchtx1KeyPressed
        // TODO add your handling code here:
        String s1 = (String) ComboUp.getSelectedItem();
        String s2 = InSearchtx1.getText();
        try {
            st11 = con.createStatement();
            if (InSearchtx1.getText().equals("")) {
                query11 = "select * from authority";
            } else if (ComboUp.getSelectedItem().equals("Authority_ID")) {
                query11 = "select * from authority where " + s1 + " = '" + s2 + "'";
            } else {
                query11 = "select * from authority where " + s1 + " like '%" + s2 + "%'";
            }
            res11 = st11.executeQuery(query11);
            InUpdateTable.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_InSearchtx1KeyPressed

    private void InSearchtx1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InSearchtx1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InSearchtx1ActionPerformed

    private void InUpdateTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InUpdateTableMouseClicked
        // TODO add your handling code here:
        TableColumnModel modelecolonne = InUpdateTable.getColumnModel();
        TableModel modele = InUpdateTable.getModel();
        int tot = modelecolonne.getColumnCount();
        for (int i = 0; i < tot; i++) {
            int taille = 0;
            int tot2 = modele.getRowCount();
            for (int j = 0; j < tot2; j++) {
                if (modele.getValueAt(j, i) != null) {
                    int taille2 = modele.getValueAt(j, i).toString().length() * 7;
                    if (taille2 > taille) {
                        taille = taille2;
                    }
                }
                modelecolonne.getColumn(i).setPreferredWidth(taille);
            }
        }
        String s1 = "", s2 = "";
        int row = InUpdateTable.getSelectedRow();
        String n = InUpdateTable.getModel().getValueAt(row, 0).toString();
        query6 = "select * from authority where Authority_ID='" + n + "'";
        try {
            st6 = con.createStatement();
            res6 = st6.executeQuery(query6);
            //s1=res3.getString("Blood_group");
            //s2=res3.getString("Gender");
            //System.out.println(s1);
            while (res6.next()) {
                InUpdateID.setText(res6.getString("Authority_ID"));
                InUpdateName.setText(res6.getString("Name"));
                //UpdateGen.setText(res3.getString("Gender"));
                //UpdateBG.setText(res3.getString("Blood_group"));

                if (("Male").equals(res6.getString("Gender"))) {
                    InMaleB2.setSelected(true);
                    InFemaleB2.setSelected(false);
                } else {
                    InFemaleB2.setSelected(true);
                    InMaleB2.setSelected(false);
                }
                InUpdateCombo.setSelectedItem(res6.getString("Blood_group"));
                InUpdateReli.setText(res6.getString("Religion"));
                InUpdateLD.setText(res6.getString("Last_donation"));
                InUpdateNmbr.setText(res6.getString("Phone_number"));
            }
            //JOptionPane.showMessageDialog(null, "Ok!");
        } catch (Exception e1) {
            JOptionPane.showMessageDialog(null, "Exception in table: " + e1);
        }
    }//GEN-LAST:event_InUpdateTableMouseClicked

    private void InClearUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InClearUpdateActionPerformed
        // TODO add your handling code here:
        InUpdateID.setText("");
        InUpdateName.setText("");
        InMaleB2.setSelected(true);
        InFemaleB2.setSelected(false);
        InUpdateCombo.setSelectedItem("B+");
        InUpdateReli.setText("");
        InUpdateLD.setText("");
        InUpdateNmbr.setText("");
        InSearchtx1.setText("");
        ComboUp.setSelectedItem("Authority_ID");
        try {
            //            st11 = con.createStatement();
            //            query11 = "select * from authority";
            //            res11 = st11.executeQuery(query11);
            InUpdateTable.setModel(new DefaultTableModel(null, new String[]{"Authority_ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception:" + e);
        }
    }//GEN-LAST:event_InClearUpdateActionPerformed

    private void InUpdateBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InUpdateBActionPerformed
        // TODO add your handling code here:
        try {
            String ID1 = "", nam1 = "", gen1 = "", BG1 = "", Reli1 = "", LD1 = "", nmbr1 = "";
            stUp = con.createStatement();
            if ((InUpdateID.getText().equals("")) || (InUpdateName.getText().equals("")) || (!((InMaleB2.isSelected()) || (InFemaleB2.isSelected()))) || (InUpdateNmbr.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Please update ID,Name,Gender,Blood group,Phone number and other information correctly!");
            } else {
                ID1 = InUpdateID.getText();
                nam1 = InUpdateName.getText();
                gen1 = "";
                if (InMaleB2.isSelected()) {
                    gen1 = "Male";
                } else if (InFemaleB2.isSelected()) {
                    gen1 = "Female";
                }
                BG1 = (String) InUpdateCombo.getSelectedItem();
                Reli1 = InUpdateReli.getText();
                LD1 = InUpdateLD.getText();
                nmbr1 = InUpdateNmbr.getText();
                query4 = "Update authority Set Authority_ID='" + ID1 + "',Name='" + nam1 + "',Gender='" + gen1 + "',Blood_group='" + BG1 + "',Religion='" + Reli1 + "',Last_donation='" + LD1 + "',Phone_number='" + nmbr1 + "'where Authority_ID='" + ID1 + "'";

                stUp.executeUpdate(query4);
                JOptionPane.showMessageDialog(null, "Member's info is now updated!");
            }
        } catch (Exception e2) {
            JOptionPane.showMessageDialog(null, "Exception in table: " + e2);
        }
    }//GEN-LAST:event_InUpdateBActionPerformed

    private void InShowBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InShowBActionPerformed
        // TODO add your handling code here:
        try {
            st5 = con.createStatement();
            query5 = "select * from authority";
            res5 = st5.executeQuery(query5);
            InUpdateTable.setModel(DbUtils.resultSetToTableModel(res5));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_InShowBActionPerformed

    private void InUpdateNmbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InUpdateNmbrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InUpdateNmbrActionPerformed

    private void InFemaleB2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InFemaleB2MouseClicked
        // TODO add your handling code here:
        InMaleB2.setSelected(false);
    }//GEN-LAST:event_InFemaleB2MouseClicked

    private void InMaleB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InMaleB2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InMaleB2ActionPerformed

    private void InMaleB2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InMaleB2MouseClicked
        // TODO add your handling code here:
        InFemaleB2.setSelected(false);
    }//GEN-LAST:event_InMaleB2MouseClicked

    private void InUpdateNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InUpdateNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InUpdateNameActionPerformed

    private void InClearDlt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InClearDlt1ActionPerformed
        // TODO add your handling code here:
        IDA.setText("");
        NA.setText("");
        GA.setText("");
        BGA.setText("");
        RA.setText("");
        LDA.setText("");
        PNA.setText("");
        InSearchtx.setText("");
        ComboDelete.setSelectedItem("Authority_ID");
        try {
            //            st11 = con.createStatement();
            //            query11 = "select * from authority";
            //            res11 = st11.executeQuery(query11);
            DeleteTable.setModel(new DefaultTableModel(null, new String[]{"Authority_ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception:" + e);
        }
    }//GEN-LAST:event_InClearDlt1ActionPerformed

    private void IDAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IDAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IDAActionPerformed

    private void DeleteTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DeleteTableMouseClicked
        // TODO add your handling code here:
        TableColumnModel modelecolonne = DeleteTable.getColumnModel();
        TableModel modele = DeleteTable.getModel();
        int tot = modelecolonne.getColumnCount();
        for (int i = 0; i < tot; i++) {
            int taille = 0;
            int tot2 = modele.getRowCount();
            for (int j = 0; j < tot2; j++) {
                if (modele.getValueAt(j, i) != null) {
                    int taille2 = modele.getValueAt(j, i).toString().length() * 7;
                    if (taille2 > taille) {
                        taille = taille2;
                    }
                }
                modelecolonne.getColumn(i).setPreferredWidth(taille);
            }
        }
        String s1 = "", s2 = "";
        int row = DeleteTable.getSelectedRow();
        String n = DeleteTable.getModel().getValueAt(row, 0).toString();
        query12 = "select * from authority where Authority_ID='" + n + "'";
        try {
            st12 = con.createStatement();
            res12 = st12.executeQuery(query12);
            //s1=res3.getString("Blood_group");
            //s2=res3.getString("Gender");
            //System.out.println(s1);
            while (res12.next()) {
                IDA.setText(res12.getString("Authority_ID"));
                NA.setText(res12.getString("Name"));
                GA.setText(res12.getString("Gender"));
                BGA.setText(res12.getString("Blood_group"));
                RA.setText(res12.getString("Religion"));
                LDA.setText(res12.getString("Last_donation"));
                PNA.setText(res12.getString("Phone_number"));
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception " + e);
        }
    }//GEN-LAST:event_DeleteTableMouseClicked

    private void InDeleteMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InDeleteMainActionPerformed
        // TODO add your handling code here:

        try {
            st3 = con.createStatement();
            String DeleteID = IDA.getText();
            if (DeleteID.equals("")) {
                JOptionPane.showMessageDialog(null, "Please!Select the member whom info you want to delete!");
            } else {
                query3 = "Delete from authority where Authority_ID='" + DeleteID + "'";
                System.out.println(query3);
                //            state.executeQuery(query);
                st3.executeUpdate(query3);
                JOptionPane.showMessageDialog(null, "Selected member's info is now deleted!");
            }
        } catch (Exception e3) {
            JOptionPane.showMessageDialog(null, "Exception::: " + e3);
        }
    }//GEN-LAST:event_InDeleteMainActionPerformed

    private void ShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowAllActionPerformed
        // TODO add your handling code here:

        try {
            st5 = con.createStatement();
            query5 = "select * from authority";
            res5 = st5.executeQuery(query5);
            DeleteTable.setModel(new DefaultTableModel(null, new String[]{"Authority_ID", "Name", "Gender", "Blood_group", "Religion", "Last_donation", "Phone_number"}));
            DeleteTable.setModel(DbUtils.resultSetToTableModel(res5));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ShowAllActionPerformed

    private void InSearchtxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InSearchtxKeyPressed
        // TODO add your handling code here:
        String s1 = (String) ComboDelete.getSelectedItem();
        String s2 = InSearchtx.getText();
        try {
            st11 = con.createStatement();
            if (InSearchtx.getText().equals("")) {
                query11 = "select * from authority";
            } else if (ComboDelete.getSelectedItem().equals("Authority_ID")) {
                query11 = "select * from authority where " + s1 + " = '" + s2 + "'";
            } else {
                query11 = "select * from authority where " + s1 + " like '%" + s2 + "%'";
            }
            res11 = st11.executeQuery(query11);
            DeleteTable.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_InSearchtxKeyPressed

    private void InSearchtxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InSearchtxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InSearchtxActionPerformed

    private void InsubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsubActionPerformed
        // TODO add your handling code here:
        try {
            String id = "", nam = "", Gen = "", BL = "", Reli = "", LD = "", Pn = "";
            if ((Inau.getText().equals("")) || (Innam.getText().equals("")) || (!((Inmale.isSelected()) || (Infemale.isSelected()))) || (Inpn.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Please!Give ID,Name,Gender,Blood Group,Phone number and other information");
            } else {
                id = Inau.getText();
                nam = Innam.getText();
                Gen = "";
                if (Inmale.isSelected()) {
                    Gen = "Male";
                } else if (Infemale.isSelected()) {
                    Gen = "Female";
                }
                //String Gen = Gentx.getText();
                BL = (String) Inbgcom.getSelectedItem();
                Reli = Inre.getText();
                LD = Inld.getText();
                Pn = Inpn.getText();
                query = "insert into authority(Authority_ID,Name,Gender,Blood_group,Religion,Last_donation,Phone_number) "
                        + "values('" + id + "','" + nam + "','" + Gen + "','" + BL + "','" + Reli + "','" + LD + "','" + Pn + "')";
                //System.out.println(query);
                //            state.executeQuery(query);
                st1.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "A new member is now added!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Sorry!You are inserting duplicate ID!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_InsubActionPerformed

    private void InclActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InclActionPerformed
        // TODO add your handling code here:

        Inau.setText("");
        Innam.setText("");
        Inmale.setSelected(true);
        Infemale.setSelected(false);
        Inbgcom.setSelectedItem("B+");
        Inre.setText("");
        Inld.setText("");
        Inpn.setText("");
    }//GEN-LAST:event_InclActionPerformed

    private void InpnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InpnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InpnActionPerformed

    private void InldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InldActionPerformed

    private void InfemaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InfemaleMouseClicked
        // TODO add your handling code here:
        Inmale.setSelected(false);
    }//GEN-LAST:event_InfemaleMouseClicked

    private void InmaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InmaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InmaleActionPerformed

    private void InmaleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InmaleMouseClicked
        // TODO add your handling code here:
        Infemale.setSelected(false);
    }//GEN-LAST:event_InmaleMouseClicked

    private void InauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InauActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InauActionPerformed

    private void PassTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PassTableMouseClicked
        // TODO add your handling code here:
        TableColumnModel modelecolonne = PassTable.getColumnModel();
        TableModel modele = PassTable.getModel();
        int tot = modelecolonne.getColumnCount();
        for (int i = 0; i < tot; i++) {
            int taille = 0;
            int tot2 = modele.getRowCount();
            for (int j = 0; j < tot2; j++) {
                if (modele.getValueAt(j, i) != null) {
                    int taille2 = modele.getValueAt(j, i).toString().length() * 7;
                    if (taille2 > taille) {
                        taille = taille2;
                    }
                }
                modelecolonne.getColumn(i).setPreferredWidth(taille);
            }
        }
        int row = PassTable.getSelectedRow();
        String n = PassTable.getModel().getValueAt(row, 1).toString();
        query6 = "select * from autho_pass where Password='" + n + "'";
        try {
            st6 = con.createStatement();
            res6 = st6.executeQuery(query6);
            //s1=res3.getString("Blood_group");
            //s2=res3.getString("Gender");
            //System.out.println(s1);
            while (res6.next()) {
                UN.setText(res6.getString("User_name"));
                Pass.setText(res6.getString("Password"));
                CCombo.setSelectedItem(res6.getString("Position"));
            }
            //JOptionPane.showMessageDialog(null, "Ok!");
        } catch (Exception e1) {
            JOptionPane.showMessageDialog(null, "Exception in table: " + e1);
        }
    }//GEN-LAST:event_PassTableMouseClicked

    private void ShowB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShowB3ActionPerformed
        // TODO add your handling code here:
        try {
            st5 = con.createStatement();
            query5 = "select * from autho_pass";
            res5 = st5.executeQuery(query5);
            PassTable.setModel(DbUtils.resultSetToTableModel(res5));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_ShowB3ActionPerformed

    private void Clr1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Clr1ActionPerformed
        // TODO add your handling code here:
        CCombo.setSelectedItem("User_name");
        CTx.setText("");
        UN.setText("");
        Pass.setText("");
        ps1.setSelectedItem("Member");
        try {
            //            st11 = con.createStatement();
            //            query11 = "select * from authority";
            //            res11 = st11.executeQuery(query11);
            PassTable.setModel(new DefaultTableModel(null, new String[]{"User_name", "Password", "Position"}));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Exception:" + e);
        }
    }//GEN-LAST:event_Clr1ActionPerformed

    private void In1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_In1ActionPerformed
        // TODO add your handling code here:
        try {
            String un1 = "", pass1 = "", pt1 = "";
            if ((UN.getText().equals("")) || (Pass.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Please!Give username,password and position correctly!");
            } else {
                un1 = UN.getText();
                pass1 = Pass.getText();
                pt1 = (String) ps1.getSelectedItem();
                query = "insert into autho_pass(User_name,Password,Position)"
                        + "values('" + un1 + "','" + pass1 + "','" + pt1 + "')";
                //System.out.println(query);
                //            state.executeQuery(query);
                st1.executeUpdate(query);
                JOptionPane.showMessageDialog(null, "Added!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Sorry!you are inserting duplicate password!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_In1ActionPerformed

    private void Up1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Up1ActionPerformed
        // TODO add your handling code here:
        try {
            String un2 = "", pass2 = "", pos2 = "";
            stUp = con.createStatement();
            if ((UN.getText().equals("")) || (Pass.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Please update username,password and position correctly!");
            } else {
                un2 = UN.getText();
                pass2 = Pass.getText();
                pos2 = (String) ps1.getSelectedItem();
                query4 = "Update autho_pass Set User_name='" + un2 + "',Password='" + pass2 + "',Position='" + pos2 + "'where Password='" + pass2 + "'";

                stUp.executeUpdate(query4);
                JOptionPane.showMessageDialog(null, "Updated!");
            }
        } catch (Exception e2) {
            JOptionPane.showMessageDialog(null, "Exception in table: " + e2);
        }
    }//GEN-LAST:event_Up1ActionPerformed

    private void DeleteB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteB1ActionPerformed
        // TODO add your handling code here:
        try {
            st3 = con.createStatement();
            String pp = Pass.getText();
            if (pp.equals("")) {
                JOptionPane.showMessageDialog(null, "Please!Select the info which you want to delete!");
            } else {
                query3 = "Delete from autho_pass where Password='" + pp + "'";
                System.out.println(query3);
                //            state.executeQuery(query);
                st3.executeUpdate(query3);
                JOptionPane.showMessageDialog(null, "Deleted!");
            }
        } catch (Exception e3) {
            JOptionPane.showMessageDialog(null, "Exception::: " + e3);
        }
    }//GEN-LAST:event_DeleteB1ActionPerformed

    private void CTxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CTxKeyPressed
        // TODO add your handling code here:
        String s1 = (String) CCombo.getSelectedItem();
        String s2 = CTx.getText();
        try {
            st11 = con.createStatement();
            if (CTx.getText().equals("")) {
                query11 = "select * from autho_pass";
            } else {
                query11 = "select * from autho_pass where " + s1 + " like '%" + s2 + "%'";
            }
            res11 = st11.executeQuery(query11);
            PassTable.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_CTxKeyPressed

    private void InSearchtxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InSearchtxKeyReleased
        // TODO add your handling code here:
        String s1 = (String) ComboDelete.getSelectedItem();
        String s2 = InSearchtx.getText();
        try {
            st11 = con.createStatement();
            if (InSearchtx.getText().equals("")) {
                query11 = "select * from authority";
            } else if (ComboDelete.getSelectedItem().equals("Authority_ID")) {
                query11 = "select * from authority where " + s1 + " = '" + s2 + "'";
            } else {
                query11 = "select * from authority where " + s1 + " like '%" + s2 + "%'";
            }
            res11 = st11.executeQuery(query11);
            DeleteTable.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_InSearchtxKeyReleased

    private void InSearchtx1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_InSearchtx1KeyReleased
        // TODO add your handling code here:
        String s1 = (String) ComboUp.getSelectedItem();
        String s2 = InSearchtx1.getText();
        try {
            st11 = con.createStatement();
            if (InSearchtx1.getText().equals("")) {
                query11 = "select * from authority";
            } else if (ComboUp.getSelectedItem().equals("Authority_ID")) {
                query11 = "select * from authority where " + s1 + " = '" + s2 + "'";
            } else {
                query11 = "select * from authority where " + s1 + " like '%" + s2 + "%'";
            }
            res11 = st11.executeQuery(query11);
            InUpdateTable.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_InSearchtx1KeyReleased

    private void CTxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CTxKeyReleased
        // TODO add your handling code here:
        String s1 = (String) CCombo.getSelectedItem();
        String s2 = CTx.getText();
        try {
            st11 = con.createStatement();
            if (CTx.getText().equals("")) {
                query11 = "select * from autho_pass";
            } else {
                query11 = "select * from autho_pass where " + s1 + " like '%" + s2 + "%'";
            }
            res11 = st11.executeQuery(query11);
            PassTable.setModel(DbUtils.resultSetToTableModel(res11));

        } catch (Exception e5) {
            JOptionPane.showMessageDialog(null, "Exception: " + e5);
        }
    }//GEN-LAST:event_CTxKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Authority.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Authority.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Authority.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Authority.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Authority().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AllInfo;
    private javax.swing.JTextField BGA;
    private javax.swing.JButton Back_log;
    private javax.swing.JComboBox<String> CCombo;
    private javax.swing.JTextField CTx;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JButton Clr1;
    private javax.swing.JComboBox<String> ComboDelete;
    private javax.swing.JComboBox<String> ComboUp;
    private javax.swing.JButton DeleteB1;
    private javax.swing.JTable DeleteTable;
    private javax.swing.JTextField GA;
    private javax.swing.JTextField IDA;
    private javax.swing.JButton In1;
    private javax.swing.JButton InClearDlt1;
    private javax.swing.JButton InClearUpdate;
    private javax.swing.JButton InDeleteMain;
    private javax.swing.JRadioButton InFemaleB2;
    private javax.swing.JRadioButton InMaleB2;
    private javax.swing.JTextField InSearchtx;
    private javax.swing.JTextField InSearchtx1;
    private javax.swing.JButton InShowB;
    public javax.swing.JButton InUpdateB;
    private javax.swing.JComboBox<String> InUpdateCombo;
    private javax.swing.JTextField InUpdateID;
    private javax.swing.JTextField InUpdateLD;
    private javax.swing.JTextField InUpdateName;
    private javax.swing.JTextField InUpdateNmbr;
    private javax.swing.JTextField InUpdateReli;
    private javax.swing.JTable InUpdateTable;
    private javax.swing.JTextField Inau;
    private javax.swing.JComboBox<String> Inbgcom;
    private javax.swing.JButton Incl;
    private javax.swing.JRadioButton Infemale;
    private javax.swing.JTextField Inld;
    private javax.swing.JRadioButton Inmale;
    private javax.swing.JTextField Innam;
    private javax.swing.JTextField Inpn;
    private javax.swing.JTextField Inre;
    public javax.swing.JButton Insub;
    private javax.swing.JTextField LDA;
    private javax.swing.JCheckBox MB;
    private javax.swing.JTextField NA;
    private javax.swing.JTextField PNA;
    private javax.swing.JTextField Pass;
    private javax.swing.JTable PassTable;
    private javax.swing.JTextField RA;
    private javax.swing.JButton ShowAll;
    private javax.swing.JButton ShowB3;
    private javax.swing.JButton SumbitBtn;
    private javax.swing.JTable TableSearch;
    private javax.swing.JTextField UN;
    private javax.swing.JCheckBox UP;
    private javax.swing.JButton Up1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox<String> ps1;
    // End of variables declaration//GEN-END:variables
}
